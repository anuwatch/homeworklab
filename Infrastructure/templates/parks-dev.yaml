apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: parks-dev
objects:
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewBuild
    creationTimestamp: null
    labels:
      build: mlbparks
    name: mlbparks
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: mlbparks:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      binary: {}
      type: Binary
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: jboss-eap70-openshift:1.7
          namespace: openshift
      type: Source
    successfulBuildsHistoryLimit: 5
    triggers:
    - github:
        secret: 6sWNC4mDOtdVKb2RKjnk
      type: GitHub
    - generic:
        secret: 4XtUcnwuE3aSDtX54n_N
      type: Generic
  status:
    lastVersion: 0
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewBuild
    creationTimestamp: null
    labels:
      build: nationalparks
    name: nationalparks
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: nationalparks:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      binary: {}
      type: Binary
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: redhat-openjdk18-openshift:1.2
          namespace: openshift
      type: Source
    successfulBuildsHistoryLimit: 5
    triggers:
    - github:
        secret: C3AjVoOxp-2TLo0KRYUc
      type: GitHub
    - generic:
        secret: OGoJMK9S8koo7aKcel2O
      type: Generic
  status:
    lastVersion: 0
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewBuild
    creationTimestamp: null
    labels:
      build: parksmap
    name: parksmap
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: parksmap:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      binary: {}
      type: Binary
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: redhat-openjdk18-openshift:1.2
          namespace: openshift
      type: Source
    successfulBuildsHistoryLimit: 5
    triggers:
    - github:
        secret: 0_Ghp8wCzZ4EXtkc_Ub1
      type: GitHub
    - generic:
        secret: gGXF4tvVn4wywAqv2BtF
      type: Generic
  status:
    lastVersion: 0
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewBuild
      openshift.io/image.dockerRepositoryCheck: 2018-12-21T08:40:00Z
    creationTimestamp: null
    generation: 5
    labels:
      build: mlbparks
    name: mlbparks
  spec:
    lookupPolicy:
      local: false
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
      openshift.io/image.dockerRepositoryCheck: 2018-12-22T08:45:30Z
    creationTimestamp: null
    generation: 2
    labels:
      app: mongodb
    name: mongodb
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/imported-from: registry.access.redhat.com/rhscl/mongodb-26-rhel7
      from:
        kind: DockerImage
        name: registry.access.redhat.com/rhscl/mongodb-26-rhel7:latest
      generation: 2
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Source
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewBuild
      openshift.io/image.dockerRepositoryCheck: 2018-12-21T08:01:35Z
    creationTimestamp: null
    generation: 3
    labels:
      build: nationalparks
    name: nationalparks
  spec:
    lookupPolicy:
      local: false
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewBuild
      openshift.io/image.dockerRepositoryCheck: 2018-12-21T08:02:20Z
    creationTimestamp: null
    generation: 3
    labels:
      build: parksmap
    name: parksmap
  spec:
    lookupPolicy:
      local: false
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    generation: 1
    labels:
      app: mlbparks
    name: mlbparks
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: mlbparks
      deploymentconfig: mlbparks
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: mlbparks
          deploymentconfig: mlbparks
      spec:
        containers:
        - env:
          - name: APPNAME
            valueFrom:
              configMapKeyRef:
                key: mlbparks
                name: appname
          - name: DB_PASSWORD
            valueFrom:
              configMapKeyRef:
                key: DB_PASSWORD
                name: mongodb-config
          - name: DB_PORT
            valueFrom:
              configMapKeyRef:
                key: DB_PORT
                name: mongodb-config
          - name: DB_USERNAME
            valueFrom:
              configMapKeyRef:
                key: DB_USERNAME
                name: mongodb-config
          - name: DB_HOST
            valueFrom:
              configMapKeyRef:
                key: DB_HOST
                name: mongodb-config
          - name: DB_NAME
            valueFrom:
              configMapKeyRef:
                key: DB_NAME
                name: mongodb-config
          image: docker-registry.default.svc:5000/akkarapol-parks-dev/mlbparks:0.0-0
          imagePullPolicy: IfNotPresent
          name: mlbparks
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ws/healthz/
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1          
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ws/healthz/
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/eap/standalone/configuration/application-users.properties
            name: mlbparks-config
            subPath: application-users.properties
          - mountPath: /opt/eap/standalone/configuration/application-roles.properties
            name: mlbparks-config1
            subPath: application-roles.properties
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: mlbparks-config
          name: mlbparks-config
        - configMap:
            defaultMode: 420
            name: mlbparks-config
          name: mlbparks-config1
    test: false
    triggers: []
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    generation: 1
    labels:
      app: mongodb
    name: mongodb
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: mongodb
      deploymentconfig: mongodb
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: mongodb
          deploymentconfig: mongodb
      spec:
        containers:
        - env:
          - name: MONGODB_ADMIN_PASSWORD
            value: admin
          - name: MONGODB_DATABASE
            value: parks
          - name: MONGODB_PASSWORD
            value: mongodb
          - name: MONGODB_USER
            value: mongodb
          image: registry.access.redhat.com/rhscl/mongodb-26-rhel7@sha256:f00afec20e276facbb081afd178bf5743891bca1f533538b032d2a9e2a831cc4
          imagePullPolicy: Always
          name: mongodb
          ports:
          - containerPort: 27017
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/mongodb/data
            name: mongodb-volume-1
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: mongodb-volume-1
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - mongodb
        from:
          kind: ImageStreamTag
          name: mongodb:latest
      type: ImageChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    generation: 1
    labels:
      app: nationalparks
    name: nationalparks
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: nationalparks
      deploymentconfig: nationalparks
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: nationalparks
          deploymentconfig: nationalparks
      spec:
        containers:
        - env:
          - name: APPNAME
            valueFrom:
              configMapKeyRef:
                key: nationalparks
                name: appname
          - name: DB_PASSWORD
            valueFrom:
              configMapKeyRef:
                key: DB_PASSWORD
                name: mongodb-config
          - name: DB_PORT
            valueFrom:
              configMapKeyRef:
                key: DB_PORT
                name: mongodb-config
          - name: DB_USERNAME
            valueFrom:
              configMapKeyRef:
                key: DB_USERNAME
                name: mongodb-config
          - name: DB_HOST
            valueFrom:
              configMapKeyRef:
                key: DB_HOST
                name: mongodb-config
          - name: DB_NAME
            valueFrom:
              configMapKeyRef:
                key: DB_NAME
                name: mongodb-config
          image: docker-registry.default.svc:5000/akkarapol-parks-dev/nationalparks:0.0-0
          imagePullPolicy: IfNotPresent          
          name: nationalparks
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ws/healthz/
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1          
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ws/healthz/
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/eap/standalone/configuration/application-users.properties
            name: nationalparks-config
            subPath: application-users.properties
          - mountPath: /opt/eap/standalone/configuration/application-roles.properties
            name: nationalparks-config1
            subPath: application-roles.properties
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: nationalparks-config
          name: nationalparks-config
        - configMap:
            defaultMode: 420
            name: nationalparks-config
          name: nationalparks-config1
    test: false
    triggers: []
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    generation: 1
    labels:
      app: parksmap
    name: parksmap
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: parksmap
      deploymentconfig: parksmap
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: parksmap
          deploymentconfig: parksmap
      spec:
        containers:
        - env:
          - name: APPNAME
            valueFrom:
              configMapKeyRef:
                key: parksmap
                name: appname
          image: docker-registry.default.svc:5000/akkarapol-parks-dev/parksmap:0.0-0
          imagePullPolicy: IfNotPresent
          name: parksmap
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ws/healthz/
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ws/healthz/
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/eap/standalone/configuration/application-users.properties
            name: parksmap-config
            subPath: application-users.properties
          - mountPath: /opt/eap/standalone/configuration/application-roles.properties
            name: parksmap-config1
            subPath: application-roles.properties
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: parksmap-config
          name: parksmap-config
        - configMap:
            defaultMode: 420
            name: parksmap-config
          name: parksmap-config1
    test: false
    triggers: []
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: mlbparks
      role: backend
      type: parksmap-backend
    name: mlbparks
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: mlbparks
      deploymentconfig: mlbparks
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: mongodb
    name: mongodb
  spec:
    ports:
    - name: 27017-tcp
      port: 27017
      protocol: TCP
      targetPort: 27017
    selector:
      app: mongodb
      deploymentconfig: mongodb
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: nationalparks
      role: backend
      type: parksmap-backend
    name: nationalparks
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: nationalparks
      deploymentconfig: nationalparks
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: parksmap
      role: fronted
    name: parksmap
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: parksmap
      deploymentconfig: parksmap
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  data:
    DB_HOST: mongodb
    DB_NAME: parks
    DB_PASSWORD: mongodb
    DB_PORT: "27017"
    DB_USERNAME: mongodb
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: mongodb-config
- apiVersion: v1
  data:
    application-roles.properties: Placeholder
    application-users.properties: Placeholder
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: mlbparks-config
- apiVersion: v1
  data:
    application-roles.properties: Placeholder
    application-users.properties: Placeholder
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: nationalparks-config
- apiVersion: v1
  data:
    application-roles.properties: Placeholder
    application-users.properties: Placeholder
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: parksmap-config
- apiVersion: v1
  data:
    mlbparks: MLB Parks (Dev)
    nationalparks: National Parks (Dev)
    parksmap: ParksMap (Dev)
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: appname
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: null
    labels:
      app: mlbparks
    name: mlbparks
  spec:
    port:
      targetPort: 8080
    to:
      kind: Service
      name: mlbparks
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2018-12-21T08:03:44Z
        status: "True"
        type: Admitted
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: null
    labels:
      app: nationalparks
    name: nationalparks
  spec:
    port:
      targetPort: 8080
    to:
      kind: Service
      name: nationalparks
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2018-12-21T08:03:46Z
        status: "True"
        type: Admitted
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: null
    labels:
      app: parksmap
    name: parksmap
  spec:
    port:
      targetPort: 8080
    to:
      kind: Service
      name: parksmap
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2018-12-21T08:03:53Z
        status: "True"
        type: Admitted
      routerName: router
      wildcardPolicy: None
