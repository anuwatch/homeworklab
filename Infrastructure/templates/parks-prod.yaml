apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: parks-prod
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    generation: 1
    labels:
      app: mlbparks-blue
    name: mlbparks-blue
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: mlbparks-blue
      deploymentconfig: mlbparks-blue
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: mlbparks-blue
          deploymentconfig: mlbparks-blue
      spec:
        containers:
        - env:
          - name: APPNAME
            valueFrom:
              configMapKeyRef:
                key: mlbparks-blue
                name: appname
          - name: DB_NAME
            valueFrom:
              configMapKeyRef:
                key: DB_NAME
                name: mongodb-config
          - name: DB_PASSWORD
            valueFrom:
              configMapKeyRef:
                key: DB_PASSWORD
                name: mongodb-config
          - name: DB_PORT
            valueFrom:
              configMapKeyRef:
                key: DB_PORT
                name: mongodb-config
          - name: DB_REPLICASET
            valueFrom:
              configMapKeyRef:
                key: DB_REPLICASET
                name: mongodb-config
          - name: DB_USERNAME
            valueFrom:
              configMapKeyRef:
                key: DB_USERNAME
                name: mongodb-config
          - name: DB_HOST
            valueFrom:
              configMapKeyRef:
                key: DB_HOST
                name: mongodb-config
          image: docker-registry.default.svc:5000/akkarapol-parks-dev/mlbparks:0.0
          imagePullPolicy: IfNotPresent
          name: mlbparks-blue
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ws/healthz/
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ws/healthz/
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/eap/standalone/configuration/application-users.properties
            name: mlbparks-blue-config
            subPath: application-users.properties
          - mountPath: /opt/eap/standalone/configuration/application-roles.properties
            name: mlbparks-blue-config1
            subPath: application-roles.properties
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: mlbparks-blue-config
          name: mlbparks-blue-config
        - configMap:
            defaultMode: 420
            name: mlbparks-blue-config
          name: mlbparks-blue-config1
    test: false
    triggers: []
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    generation: 1
    labels:
      app: mlbparks-green
    name: mlbparks-green
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: mlbparks-green
      deploymentconfig: mlbparks-green
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: mlbparks-green
          deploymentconfig: mlbparks-green
      spec:
        containers:
        - env:
          - name: APPNAME
            valueFrom:
              configMapKeyRef:
                key: mlbparks-green
                name: appname
          - name: DB_PORT
            valueFrom:
              configMapKeyRef:
                key: DB_PORT
                name: mongodb-config
          - name: DB_REPLICASET
            valueFrom:
              configMapKeyRef:
                key: DB_REPLICASET
                name: mongodb-config
          - name: DB_USERNAME
            valueFrom:
              configMapKeyRef:
                key: DB_USERNAME
                name: mongodb-config
          - name: DB_HOST
            valueFrom:
              configMapKeyRef:
                key: DB_HOST
                name: mongodb-config
          - name: DB_NAME
            valueFrom:
              configMapKeyRef:
                key: DB_NAME
                name: mongodb-config
          - name: DB_PASSWORD
            valueFrom:
              configMapKeyRef:
                key: DB_PASSWORD
                name: mongodb-config
          image: docker-registry.default.svc:5000/akkarapol-parks-dev/mlbparks:0.0
          imagePullPolicy: IfNotPresent
          name: mlbparks-green
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ws/healthz/
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ws/healthz/
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/eap/standalone/configuration/application-users.properties
            name: mlbparks-green-config
            subPath: application-users.properties
          - mountPath: /opt/eap/standalone/configuration/application-roles.properties
            name: mlbparks-green-config1
            subPath: application-roles.properties
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: mlbparks-green-config
          name: mlbparks-green-config
        - configMap:
            defaultMode: 420
            name: mlbparks-green-config
          name: mlbparks-green-config1
    test: false
    triggers: []
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    generation: 1
    labels:
      app: nationalparks-blue
    name: nationalparks-blue
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: nationalparks-blue
      deploymentconfig: nationalparks-blue
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: nationalparks-blue
          deploymentconfig: nationalparks-blue
      spec:
        containers:
        - env:
          - name: APPNAME
            valueFrom:
              configMapKeyRef:
                key: nationalparks-blue
                name: appname
          - name: DB_NAME
            valueFrom:
              configMapKeyRef:
                key: DB_NAME
                name: mongodb-config
          - name: DB_PASSWORD
            valueFrom:
              configMapKeyRef:
                key: DB_PASSWORD
                name: mongodb-config
          - name: DB_PORT
            valueFrom:
              configMapKeyRef:
                key: DB_PORT
                name: mongodb-config
          - name: DB_REPLICASET
            valueFrom:
              configMapKeyRef:
                key: DB_REPLICASET
                name: mongodb-config
          - name: DB_USERNAME
            valueFrom:
              configMapKeyRef:
                key: DB_USERNAME
                name: mongodb-config
          - name: DB_HOST
            valueFrom:
              configMapKeyRef:
                key: DB_HOST
                name: mongodb-config
          image: docker-registry.default.svc:5000/akkarapol-parks-dev/nationalparks:0.0
          imagePullPolicy: IfNotPresent
          name: nationalparks-blue
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ws/healthz/
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ws/healthz/
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/eap/standalone/configuration/application-users.properties
            name: nationalparks-blue-config
            subPath: application-users.properties
          - mountPath: /opt/eap/standalone/configuration/application-roles.properties
            name: nationalparks-blue-config1
            subPath: application-roles.properties
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: nationalparks-blue-config
          name: nationalparks-blue-config
        - configMap:
            defaultMode: 420
            name: nationalparks-blue-config
          name: nationalparks-blue-config1
    test: false
    triggers: []
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    generation: 1
    labels:
      app: nationalparks-green
    name: nationalparks-green
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: nationalparks-green
      deploymentconfig: nationalparks-green
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: nationalparks-green
          deploymentconfig: nationalparks-green
      spec:
        containers:
        - env:
          - name: APPNAME
            valueFrom:
              configMapKeyRef:
                key: nationalparks-green
                name: appname
          - name: DB_NAME
            valueFrom:
              configMapKeyRef:
                key: DB_NAME
                name: mongodb-config
          - name: DB_PASSWORD
            valueFrom:
              configMapKeyRef:
                key: DB_PASSWORD
                name: mongodb-config
          - name: DB_PORT
            valueFrom:
              configMapKeyRef:
                key: DB_PORT
                name: mongodb-config
          - name: DB_REPLICASET
            valueFrom:
              configMapKeyRef:
                key: DB_REPLICASET
                name: mongodb-config
          - name: DB_USERNAME
            valueFrom:
              configMapKeyRef:
                key: DB_USERNAME
                name: mongodb-config
          - name: DB_HOST
            valueFrom:
              configMapKeyRef:
                key: DB_HOST
                name: mongodb-config
          image: docker-registry.default.svc:5000/akkarapol-parks-dev/nationalparks:0.0
          imagePullPolicy: IfNotPresent
          name: nationalparks-green
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ws/healthz/
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ws/healthz/
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/eap/standalone/configuration/application-users.properties
            name: nationalparks-green-config
            subPath: application-users.properties
          - mountPath: /opt/eap/standalone/configuration/application-roles.properties
            name: nationalparks-green-config1
            subPath: application-roles.properties
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: nationalparks-green-config
          name: nationalparks-green-config
        - configMap:
            defaultMode: 420
            name: nationalparks-green-config
          name: nationalparks-green-config1
    test: false
    triggers: []
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    generation: 1
    labels:
      app: parksmap-blue
    name: parksmap-blue
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: parksmap-blue
      deploymentconfig: parksmap-blue
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: parksmap-blue
          deploymentconfig: parksmap-blue
      spec:
        containers:
        - env:
          - name: APPNAME
            valueFrom:
              configMapKeyRef:
                key: parksmap-blue
                name: appname
          image: docker-registry.default.svc:5000/akkarapol-parks-dev/parksmap:0.0
          imagePullPolicy: IfNotPresent
          name: parksmap-blue
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ws/healthz/
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ws/healthz/
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/eap/standalone/configuration/application-users.properties
            name: parksmap-blue-config
            subPath: application-users.properties
          - mountPath: /opt/eap/standalone/configuration/application-roles.properties
            name: parksmap-blue-config1
            subPath: application-roles.properties
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: parksmap-blue-config
          name: parksmap-blue-config
        - configMap:
            defaultMode: 420
            name: parksmap-blue-config
          name: parksmap-blue-config1
    test: false
    triggers: []
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    generation: 1
    labels:
      app: parksmap-green
    name: parksmap-green
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: parksmap-green
      deploymentconfig: parksmap-green
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: parksmap-green
          deploymentconfig: parksmap-green
      spec:
        containers:
        - env:
          - name: APPNAME
            valueFrom:
              configMapKeyRef:
                key: parksmap-green
                name: appname
          image: docker-registry.default.svc:5000/akkarapol-parks-dev/parksmap:0.0
          imagePullPolicy: IfNotPresent
          name: parksmap-green
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ws/healthz/
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ws/healthz/
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/eap/standalone/configuration/application-users.properties
            name: parksmap-green-config
            subPath: application-users.properties
          - mountPath: /opt/eap/standalone/configuration/application-roles.properties
            name: parksmap-green-config1
            subPath: application-roles.properties
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: parksmap-green-config
          name: parksmap-green-config
        - configMap:
            defaultMode: 420
            name: parksmap-green-config
          name: parksmap-green-config1
    test: false
    triggers: []
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: mlbparks-blue
      role: backend
      type: parksmap-backend
    name: mlbparks-blue
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: mlbparks-blue
      deploymentconfig: mlbparks-blue
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: mlbparks-green
      role: backend
      type: parksmap-backend
    name: mlbparks-green
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: mlbparks-green
      deploymentconfig: mlbparks-green
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      name: mongodb
    name: mongodb
  spec:
    ports:
    - name: mongodb
      port: 27017
      protocol: TCP
      targetPort: 27017
    selector:
      name: mongodb
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
    creationTimestamp: null
    labels:
      name: mongodb
    name: mongodb-internal
  spec:
    clusterIP: None
    ports:
    - name: mongodb
      port: 27017
      protocol: TCP
      targetPort: 27017
    selector:
      name: mongodb
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: nationalparks-blue
      role: backend
      type: parksmap-backend
    name: nationalparks-blue
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: nationalparks-blue
      deploymentconfig: nationalparks-blue
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: nationalparks-green
      role: backend
      type: parksmap-backend
    name: nationalparks-green
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: nationalparks-green
      deploymentconfig: nationalparks-green
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: parksmap-blue
    name: parksmap-blue
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: parksmap-blue
      deploymentconfig: parksmap-blue
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: parksmap-green
    name: parksmap-green
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: parksmap-green
      deploymentconfig: parksmap-green
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    creationTimestamp: null
    generation: 1
    name: mongodb
  spec:
    podManagementPolicy: OrderedReady
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        name: mongodb
    serviceName: mongodb-internal
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: mongodb
      spec:
        containers:
        - args:
          - run-mongod-replication
          env:
          - name: MONGODB_DATABASE
            value: parks
          - name: MONGODB_USER
            value: mongodb
          - name: MONGODB_PASSWORD
            value: mongodb
          - name: MONGODB_ADMIN_PASSWORD
            value: mongodb_admin_password
          - name: MONGODB_REPLICA_NAME
            value: rs0
          - name: MONGODB_KEYFILE_VALUE
            value: "12345678901234567890"
          - name: MONGODB_SERVICE_NAME
            value: mongodb-internal
          image: registry.access.redhat.com/rhscl/mongodb-34-rhel7:latest
          imagePullPolicy: Always
          name: mongo-container
          ports:
          - containerPort: 27017
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - stat
              - /tmp/initialized
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/mongodb/data
            name: mongo-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
    volumeClaimTemplates:
    - metadata:
        creationTimestamp: null
        labels:
          name: mongodb
        name: mongo-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 4Gi
      status:
        phase: Pending
  status:
    collisionCount: 0
    currentReplicas: 3
    currentRevision: mongodb-84c5cf6978
    observedGeneration: 1
    readyReplicas: 3
    replicas: 3
    updateRevision: mongodb-84c5cf6978
    updatedReplicas: 3
- apiVersion: v1
  data:
    DB_HOST: mongodb
    DB_NAME: parks
    DB_PASSWORD: mongodb
    DB_PORT: "27017"
    DB_REPLICASET: rs0
    DB_USERNAME: mongodb
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: mongodb-config
- apiVersion: v1
  data:
    application-roles.properties: Placeholder
    application-users.properties: Placeholder
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: mlbparks-blue-config
- apiVersion: v1
  data:
    application-roles.properties: Placeholder
    application-users.properties: Placeholder
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: mlbparks-green-config
- apiVersion: v1
  data:
    application-roles.properties: Placeholder
    application-users.properties: Placeholder
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: nationalparks-blue-config
- apiVersion: v1
  data:
    application-roles.properties: Placeholder
    application-users.properties: Placeholder
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: nationalparks-green-config
- apiVersion: v1
  data:
    application-roles.properties: Placeholder
    application-users.properties: Placeholder
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: parksmap-blue-config
- apiVersion: v1
  data:
    application-roles.properties: Placeholder
    application-users.properties: Placeholder
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: parksmap-green-config
- apiVersion: v1
  data:
    mlbparks-green: MLB Parks (Green)
    mlbparks-blue: MLB Parks (Blue)
    nationalparks-green: National Parks (Green)
    nationalparks-blue: National Parks (Blue)
    parksmap-green: ParksMap (Green)
    parksmap-blue: ParksMap (Blue)
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: appname
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: null
    labels:
      app: mlbparks
      type: parksmap-backend
    name: mlbparks
  spec:
    port:
      targetPort: 8080
    to:
      kind: Service
      name: mlbparks-green
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2018-12-23T07:31:07Z
        status: "True"
        type: Admitted
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: null
    labels:
      app: parksmap
    name: parksmap
  spec:
    port:
      targetPort: 8080
    to:
      kind: Service
      name: parksmap-green
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2018-12-23T08:02:22Z
        status: "True"
        type: Admitted
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: null
    labels:
      app: nationalparks
      type: parksmap-backend
    name: nationalparks
  spec:
    port:
      targetPort: 8080
    to:
      kind: Service
      name: nationalparks-green
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2018-12-23T08:02:21Z
        status: "True"
        type: Admitted
      routerName: router
      wildcardPolicy: None
